{"ast":null,"code":"var _jsxFileName = \"/Users/meek/programming/playground/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\"; //from react-dom/client, not react\n\nimport './index.css'; //test stuff\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Osc extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = () => {\n      //init audioContext\n      this.setState({\n        initialized: true\n      });\n      this.oscillator = this.state.context.createOscillator();\n      this.oscillator.gain = this.state.context.createGain();\n      this.oscillator.gain.gain.setValueAtTime(1, 0);\n      this.oscillator.type = 'square';\n      this.oscillator.frequency.setValueAtTime(this.state.rootFreq, 2);\n      this.oscillator.connect(this.oscillator.gain);\n      this.play();\n    };\n\n    this.play = () => {\n      if (this.state.playing == false) this.oscillator.start();\n    };\n\n    this.updateRootFreq = newFreq => {\n      //For pitch adjustment purposes -- do not use with sequencer class\n      this.setState({\n        rootFreq: newFreq\n      }, () => this.updateFreq(newFreq));\n    };\n\n    this.updateFreq = newFreq => {\n      //For sequencing purposes\n      this.setState({\n        currentFreq: newFreq\n      }, () => {\n        if (this.oscillator != null) this.oscillator.frequency.value = this.state.currentFreq;\n      });\n      return this.state.rootFreq;\n    };\n\n    this.stop = () => {\n      if (this.state.playing == true) {\n        this.setState({\n          playing: false\n        }, () => this.oscillator.stop());\n      }\n    };\n\n    this.state = {\n      rootFreq: 440,\n      currentFreq: 440,\n      playing: false,\n      context: props.context,\n      initialized: false\n    };\n    var filter = null;\n    var oscillator = null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"key\",\n        onClick: () => {\n          this.state.context.resume();\n\n          if (this.state.initialized == false) {\n            this.init();\n          } else this.play();\n        },\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"key\",\n        onClick: () => {\n          this.state.context.suspend();\n          if (this.state.playing == true) this.stop();\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        sliderName: \"Pitch\",\n        minVal: 0,\n        maxVal: 1000,\n        defaultVal: 440,\n        callbackFn: this.updateRootFreq\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        context: this.props.context,\n        oscillator: this.oscillator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Sequencer, {\n        callbackFn: this.updateFreq\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.render = props => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"freq_slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.sliderName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: this.state.minVal,\n          max: this.state.maxVal,\n          defaultValue: this.state.defaultVal,\n          className: \"slider\",\n          id: this.state.sliderName,\n          onChange: () => {\n            this.state.callbackFn(document.getElementById(this.props.sliderName).value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      minVal: props.minVal,\n      maxVal: props.maxVal,\n      defaultVal: props.currentVal,\n      sliderName: props.sliderName,\n      callbackFn: function (value) {\n        props.callbackFn(value);\n      }\n    };\n  }\n\n}\n\nclass Sequencer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.pluckSequence = step => {\n      this.setState({\n        currentStep: step\n      });\n      let newFreq = this.state.rootFreq * (step + 0.5);\n      this.state.callbackFn(newFreq);\n      console.log(step);\n\n      if (this.state.running == false) {\n        this.interval = setInterval(() => this.runSequence(), this.state.tempo);\n      }\n    };\n\n    this.runSequence = () => {\n      let step = (this.state.currentStep + 1) % this.state.length;\n      this.setState({\n        currentStep: step,\n        running: true\n      });\n      let newFreq = this.state.rootFreq * (step + 0.5);\n      this.setState({\n        rootFreq: this.state.callbackFn(newFreq)\n      });\n      console.log(\"Current Pitch: \" + newFreq + \"Current Step: \" + step);\n    };\n\n    this.stopSequence = () => {};\n\n    this.stepUpLength = () => {\n      this.setState({\n        length: this.state.length + 1\n      });\n    };\n\n    this.stepDownLength = () => {\n      if (this.state.length - 1 > 0) this.setState({\n        length: this.state.length - 1\n      });else console.error(\"Minimum sequencer length reached\");\n    };\n\n    this.updateTempo = newTempo => {\n      this.setState({\n        tempo: newTempo\n      });\n      clearInterval(this.interval);\n      this.interval = setInterval(() => this.runSequence(), newTempo);\n    };\n\n    this.render = props => {\n      const buttonList = [];\n\n      for (let i = 0; i < this.state.length; i++) {\n        console.log(buttonList);\n        buttonList[i] = /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"seqStep\",\n          onClick: () => this.pluckSequence(i),\n          children: i\n        }, i + '_step', false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 23\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => this.stepUpLength(),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => this.stepDownLength(),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Tempo\",\n          minVal: 20,\n          maxVal: 1000,\n          defaultVal: 100,\n          callbackFn: this.updateTempo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this), buttonList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      length: 4,\n      currentStep: 0,\n      rootFreq: 440,\n      running: false,\n      tempo: 1000,\n      //in milliseconds\n      callbackFn: this.props.callbackFn\n    };\n    const interval = null;\n  }\n\n}\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = props => {\n      this.setState({\n        initialized: true,\n        context: this.props.context\n      }, () => {\n        this.filter = this.state.context.createBiquadFilter();\n        this.oscillator = this.props.oscillator;\n        console.log(this.oscillator);\n        console.log(this.oscillator.gain);\n        this.oscillator.gain.connect(this.filter);\n        this.filter.connect(this.state.context.destination);\n        this.filter.type = this.mode;\n        this.filter.frequency.setValueAtTime(this.state.cutoff, 1);\n        this.filter.q = this.filter.resonance;\n        console.log(\"filter initialized\");\n        console.log(this.filter);\n        console.log(this.state.context.destination);\n      });\n    };\n\n    this.updateCutoff = freq => {\n      this.setState({\n        cutoff: freq\n      }, this.updateFilter());\n    };\n\n    this.updateResonance = q => {\n      this.setState({\n        resonance: q\n      }, this.updateFilter());\n    };\n\n    this.updateFilter = () => {\n      if (this.state.context != null) {\n        if (this.state.initialized != false) {\n          this.filter.frequency.setValueAtTime(this.state.cutoff, 1);\n          this.filter.Q.value = this.state.resonance;\n          this.filter.type = this.mode;\n          console.log(\"filter updated\");\n        } else this.init();\n      } else console.log(\"failed to load audioContext() in updateFilter()\");\n    };\n\n    this.state = {\n      cutoff: 5000,\n      resonance: 1,\n      //between 0.0001 and 1000\n      context: this.props.context,\n      initialized: false\n    };\n    const filter = 0;\n    const oscillator = this.props.oscillator;\n    const mode = 'lowpass';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inlineDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Cutoff\",\n          minVal: 0,\n          maxVal: 5000,\n          defaultVal: this.state.cutoff,\n          callbackFn: this.updateCutoff\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Resonance\",\n          minVal: 1,\n          maxVal: 100,\n          defaultVal: this.state.resonance,\n          callbackFn: this.updateResonance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => this.mode = 'lowpass',\n          children: \" lowpass \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => this.mode = 'highpass',\n          children: \" highpass \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Envelope extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateAttack = () => {\n      let newGain = this.state.gain;\n      newGain = newGain / this.state.attack;\n      this.setState({\n        gain: newGain\n      });\n    };\n\n    this.updateRelease = () => {};\n\n    this.updateEnvelope = () => {\n      /**\n       * envelope takes attack and release and updates the envelope based on this \n       * by creating an interval var. \n       * creates interval that lasts length of attack,\n       * then once interval ends, calls the release callbackFn \n       * and runs that until it ends.\n       */\n    };\n\n    this.render = props => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      attack: 0,\n      release: 1000,\n      gain: 0,\n      callbackFn: this.props.callbackFn\n    };\n  }\n\n}\n\nclass Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {};\n  }\n\n} //const mainOsc = new Osc()\n\n\nconst context = new window.AudioContext();\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Osc, {\n  context: context\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 269,\n  columnNumber: 13\n}, this));","map":{"version":3,"names":["React","ReactDOM","Osc","Component","constructor","props","init","setState","initialized","oscillator","state","context","createOscillator","gain","createGain","setValueAtTime","type","frequency","rootFreq","connect","play","playing","start","updateRootFreq","newFreq","updateFreq","currentFreq","value","stop","filter","render","resume","suspend","Slider","sliderName","minVal","maxVal","defaultVal","callbackFn","document","getElementById","currentVal","Sequencer","pluckSequence","step","currentStep","console","log","running","interval","setInterval","runSequence","tempo","length","stopSequence","stepUpLength","stepDownLength","error","updateTempo","newTempo","clearInterval","buttonList","i","Filter","createBiquadFilter","destination","mode","cutoff","q","resonance","updateCutoff","freq","updateFilter","updateResonance","Q","Envelope","updateAttack","newGain","attack","updateRelease","updateEnvelope","release","Synth","window","AudioContext","root","createRoot"],"sources":["/Users/meek/programming/playground/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\"; //from react-dom/client, not react\nimport './index.css';\n\n//test stuff\nclass Osc extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      rootFreq: 440,\n      currentFreq: 440,\n      playing: false,\n      context: props.context,\n      initialized: false,\n    };\n    var filter = null;\n    var oscillator = null;\n  }\n  init = () => {\n    //init audioContext\n    this.setState({initialized: true});\n    this.oscillator = this.state.context.createOscillator();\n    this.oscillator.gain = this.state.context.createGain();\n    this.oscillator.gain.gain.setValueAtTime(1, 0);\n    this.oscillator.type = 'square';\n    this.oscillator.frequency.setValueAtTime(this.state.rootFreq, 2);\n    this.oscillator.connect(this.oscillator.gain);\n    this.play();\n  }\n  play = () => {\n    if(this.state.playing == false) this.oscillator.start();\n  }\n  updateRootFreq = (newFreq) => {\n    //For pitch adjustment purposes -- do not use with sequencer class\n    this.setState({rootFreq: newFreq}, () => this.updateFreq(newFreq));\n  }\n  updateFreq = (newFreq) => {\n    //For sequencing purposes\n    this.setState({currentFreq: newFreq}, () => {\n      if(this.oscillator != null) this.oscillator.frequency.value = this.state.currentFreq;\n    })\n    return this.state.rootFreq;\n  }\n  stop = () => {\n    if(this.state.playing == true) {\n      this.setState({playing: false}, () => this.oscillator.stop());\n    }\n  }\n  render(){\n    return (\n      <div className=\"mainDiv\">\n        <button className=\"key\" onClick={ () => {\n        this.state.context.resume();\n        if(this.state.initialized == false){\n          this.init();\n        }\n        else this.play();\n       } }>Play</button>\n       <button className=\"key\" onClick={ () => {\n         this.state.context.suspend();\n         if(this.state.playing == true) this.stop()\n       }}>Stop</button>\n       <Slider sliderName = \"Pitch\" minVal = {0} maxVal = {1000} defaultVal = {440} callbackFn = {this.updateRootFreq} />\n       <Filter context = {this.props.context} oscillator = {this.oscillator} />\n       <Sequencer callbackFn = {this.updateFreq}/>\n      </div>\n    );\n  }\n}\nclass Slider extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      minVal: props.minVal,\n      maxVal: props.maxVal,\n      defaultVal: props.currentVal,\n      sliderName: props.sliderName,\n      callbackFn: function(value){\n        props.callbackFn(value);\n      },\n    }\n  }\n  render = (props) => {\n    return(\n      <span className=\"freq_slider\">\n        <div>{this.state.sliderName}</div>\n          <input type =\"range\" min={this.state.minVal} max={this.state.maxVal} defaultValue ={this.state.defaultVal} className=\"slider\" id={this.state.sliderName} onChange={() =>{\n            this.state.callbackFn(document.getElementById(this.props.sliderName).value);\n          }}></input>\n      </span>\n    );\n  }\n}\nclass Sequencer extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      length: 4,\n      currentStep: 0,\n      rootFreq: 440,\n      running: false,\n      tempo: 1000, //in milliseconds\n      callbackFn: this.props.callbackFn,\n    };\n    const interval = null;\n  }\n  pluckSequence = (step) => {\n    this.setState({currentStep: step});\n    let newFreq = this.state.rootFreq * (step + 0.5);\n    this.state.callbackFn(newFreq);\n    console.log(step);\n    if(this.state.running == false) {\n      this.interval = setInterval(() => this.runSequence(), this.state.tempo);\n    }\n  }\n  runSequence = () => {\n    let step = (this.state.currentStep + 1) % this.state.length;\n    this.setState({currentStep: step, running: true});\n    let newFreq = this.state.rootFreq * (step + 0.5);\n    this.setState({rootFreq: this.state.callbackFn(newFreq)});\n    console.log(\"Current Pitch: \" + newFreq + \"Current Step: \" + step);\n  }\n  stopSequence = () => {\n\n  }\n  stepUpLength = () => {\n    this.setState({length: this.state.length + 1});\n  }\n  stepDownLength = () => {\n    if(this.state.length - 1 > 0) this.setState({length: this.state.length - 1});\n    else console.error(\"Minimum sequencer length reached\");\n  }\n  updateTempo = (newTempo) => {\n    this.setState({tempo: newTempo});\n    clearInterval(this.interval);\n    this.interval = setInterval(() => this.runSequence(), newTempo);\n  }\n  render = (props) => {\n    const buttonList = [];\n    for(let i = 0; i < this.state.length; i++){\n      console.log(buttonList);\n      buttonList[i] = <button className=\"seqStep\" key={i + '_step'} onClick={() => this.pluckSequence(i)}>{i}</button>;\n    }\n    return(\n      <div>\n        <button className=\"key\" onClick={() => this.stepUpLength() }>+</button>\n        <button className=\"key\" onClick={() => this.stepDownLength() }>-</button>\n        <Slider sliderName=\"Tempo\" minVal={20} maxVal={1000} defaultVal={100} callbackFn={this.updateTempo} />\n        {buttonList}\n      </div>\n    );\n  }\n}\nclass Filter extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      cutoff: 5000,\n      resonance: 1,     //between 0.0001 and 1000\n      context: this.props.context,\n      initialized: false,\n    }\n    const filter = 0;\n    const oscillator = this.props.oscillator;\n    const mode = 'lowpass';\n  }\n  init = (props) => {\n    this.setState({initialized: true, context: this.props.context}, () => {\n      this.filter = this.state.context.createBiquadFilter();\n      this.oscillator = this.props.oscillator;\n      console.log(this.oscillator);\n      console.log(this.oscillator.gain);\n      this.oscillator.gain.connect(this.filter);\n      this.filter.connect(this.state.context.destination);\n      this.filter.type = this.mode;\n      this.filter.frequency.setValueAtTime(this.state.cutoff, 1);\n      this.filter.q = this.filter.resonance;\n      console.log(\"filter initialized\");\n      console.log(this.filter);\n      console.log(this.state.context.destination);\n    })\n  }\n  updateCutoff = (freq) => {\n    this.setState({cutoff: freq}, this.updateFilter());\n  }\n  updateResonance = (q) => {\n    this.setState({resonance: q}, this.updateFilter());\n  }\n  updateFilter = () => {\n    if(this.state.context != null){\n      if(this.state.initialized != false){\n        this.filter.frequency.setValueAtTime(this.state.cutoff, 1);\n        this.filter.Q.value = this.state.resonance;\n        this.filter.type = this.mode;\n        console.log(\"filter updated\");\n      }\n      else this.init();\n      \n    } \n    else console.log(\"failed to load audioContext() in updateFilter()\")\n  }\n  render(){\n    return(\n      <div className=\"inlineDiv\">\n        <div>\n          <Slider sliderName = \"Cutoff\" minVal={0} maxVal={5000} defaultVal={this.state.cutoff} callbackFn={this.updateCutoff}/>\n          <Slider sliderName = \"Resonance\" minVal={1} maxVal={100} defaultVal={this.state.resonance} callbackFn={this.updateResonance}/>\n        </div>\n        <div>\n          <button className=\"key\" onClick={() => this.mode = 'lowpass'}> lowpass </button>\n          <button className=\"key\" onClick={() => this.mode = 'highpass'}> highpass </button>\n        </div>\n      </div>\n    );\n  }\n\n}\nclass Envelope extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attack: 0,\n      release: 1000,\n      gain: 0,\n      callbackFn: this.props.callbackFn,\n    }\n  }\n  updateAttack = () => {\n    let newGain = this.state.gain;\n    newGain = newGain / this.state.attack;\n\n    this.setState({gain: newGain});\n  }\n  updateRelease = () => {\n\n  }\n  updateEnvelope = () => {\n    /**\n     * envelope takes attack and release and updates the envelope based on this \n     * by creating an interval var. \n     * creates interval that lasts length of attack,\n     * then once interval ends, calls the release callbackFn \n     * and runs that until it ends.\n     */\n  }\n  render = (props) => {\n    return(\n      <div></div>\n    );\n  }\n}\nclass Synth extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n\n    };\n\n  }\n  render = () => {\n    return(\n      <div></div>\n    );\n  }\n}\n//const mainOsc = new Osc()\nconst context = new window.AudioContext;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<Osc context = {context}/>);\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}