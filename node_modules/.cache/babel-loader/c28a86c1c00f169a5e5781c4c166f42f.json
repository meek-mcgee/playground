{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\metra\\\\Desktop\\\\programming\\\\playground\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\"; //from react-dom/client, not react\n\nimport './index.css';\n/**\r\n * 'The sun is rising\r\n * it's almost dawn! \r\n * The night is short --\r\n * walk on, girl.\r\n */\n//test stuff\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = () => {\n      //init audioContext\n      this.setState({\n        initialized: true\n      });\n      this.oscillator = this.state.context.createOscillator();\n      this.oscillator.gain = this.state.context.createGain();\n      this.oscillator.gain.gain.setValueAtTime(1, 0);\n      this.oscillator.type = 'square';\n      this.oscillator.frequency.setValueAtTime(this.state.rootFreq, 2);\n      this.oscillator.connect(this.oscillator.gain);\n      this.play();\n    };\n\n    this.play = () => {\n      if (this.state.playing == false) this.oscillator.start();\n    };\n\n    this.stop = () => {\n      if (this.state.playing == true) {\n        this.setState({\n          playing: false\n        }, () => this.oscillator.stop());\n      }\n    };\n\n    this.updateGain = newGain => {\n      this.oscillator.gain.gain.setValueAtTime(newGain, 0);\n      console.log('gain updated');\n    };\n\n    this.updateRootFreq = newFreq => {\n      //For pitch adjustment purposes -- do not use with sequencer class\n      this.setState({\n        rootFreq: newFreq\n      }, () => this.updateFreq(newFreq));\n    };\n\n    this.updateFreq = newFreq => {\n      //For sequencing purposes\n      this.setState({\n        currentFreq: newFreq\n      }, () => {\n        if (this.oscillator != null) this.oscillator.frequency.value = this.state.currentFreq;\n      });\n      return this.state.rootFreq;\n    };\n\n    this.addModule = stringIndex => {\n      switch (stringIndex) {\n        case 'oscillator':\n          console.log('oscillator');\n          this.currentModules.push( /*#__PURE__*/_jsxDEV(Oscillator, {\n            context: this.state.context\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 34\n          }, this));\n          break;\n\n        case 'filter':\n          console.log('filter');\n          break;\n\n        case 'envelope':\n          console.log('envelope');\n          break;\n\n        case 'sequencer':\n          console.log('sequencer');\n          break;\n\n        default:\n          console.error('Synth.addModule() stringIndex out of range');\n      }\n\n      console.log(this.currentModules);\n    };\n\n    this.render = () => {\n      const availableModules = [];\n\n      for (let i = 0; i < this.state.moduleList.length; i++) {\n        availableModules[i] = /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => this.addModule(this.state.moduleList[i]),\n          children: this.state.moduleList[i]\n        }, this.state.moduleList[i] + \"_module\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainDiv\",\n        children: [availableModules, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => {\n            this.state.context.resume();\n\n            if (this.state.initialized == false) {\n              this.init();\n            } else this.play();\n          },\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => {\n            this.state.context.suspend();\n            if (this.state.playing == true) this.stop();\n          },\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Gain\",\n          minVal: 0,\n          maxVal: 1,\n          defaultVal: 0.5,\n          step: 0.05,\n          callbackFn: this.updateGain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Pitch\",\n          minVal: 0,\n          maxVal: 1000,\n          defaultVal: 440,\n          callbackFn: this.updateRootFreq\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          oscillator: this.oscillator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Sequencer, {\n          callbackFn: this.updateFreq\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Envelope, {\n          oscillator: this.oscillator,\n          callbackFn: this.updateGain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      numModules: 4,\n      rootFreq: 440,\n      currentFreq: 440,\n      playing: false,\n      context: props.context,\n      initialized: false,\n      moduleList: ['oscillator', 'filter', 'envelope', 'sequencer']\n    };\n    var oscillator = null;\n    var currentModules = [];\n  }\n\n}\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.render = props => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"freq_slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.sliderName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: this.state.minVal,\n          max: this.state.maxVal,\n          defaultValue: this.state.defaultVal,\n          step: this.state.step,\n          className: \"slider\",\n          id: this.state.sliderName,\n          onChange: () => {\n            this.state.callbackFn(document.getElementById(this.props.sliderName).value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      minVal: props.minVal,\n      maxVal: props.maxVal,\n      step: props.step,\n      defaultVal: props.currentVal,\n      sliderName: props.sliderName,\n      callbackFn: function (value) {\n        props.callbackFn(value);\n      }\n    };\n  }\n\n}\n\nclass Sequencer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.pluckSequence = step => {\n      this.setState({\n        currentStep: step\n      });\n      let newFreq = this.state.rootFreq * (step + 0.5);\n      this.state.callbackFn(newFreq);\n      console.log(step);\n\n      if (this.state.running == false) {\n        this.interval = setInterval(() => this.runSequence(), this.state.tempo);\n      }\n    };\n\n    this.runSequence = () => {\n      document.getElementById(\"triggerEnvelope\").click(); //will break when there's more than one envelope, must fix later\n\n      let step = (this.state.currentStep + 1) % this.state.length;\n      this.setState({\n        currentStep: step,\n        running: true\n      });\n      let newFreq = this.state.rootFreq * (step + 0.5);\n      this.setState({\n        rootFreq: this.state.callbackFn(newFreq)\n      });\n      console.log(\"Current Pitch: \" + newFreq + \"Current Step: \" + step);\n    };\n\n    this.stopSequence = () => {};\n\n    this.stepUpLength = () => {\n      this.setState({\n        length: this.state.length + 1\n      });\n    };\n\n    this.stepDownLength = () => {\n      if (this.state.length - 1 > 0) this.setState({\n        length: this.state.length - 1\n      });else console.error(\"Minimum sequencer length reached\");\n    };\n\n    this.updateTempo = newTempo => {\n      this.setState({\n        tempo: newTempo\n      });\n      clearInterval(this.interval);\n      this.interval = setInterval(() => this.runSequence(), newTempo);\n    };\n\n    this.render = props => {\n      const buttonList = [];\n\n      for (let i = 0; i < this.state.length; i++) {\n        console.log(buttonList);\n        buttonList[i] = /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"seqStep\",\n          onClick: () => this.pluckSequence(i),\n          children: i\n        }, i + '_step', false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 23\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => this.stepUpLength(),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => this.stepDownLength(),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Tempo\",\n          minVal: 20,\n          maxVal: 1000,\n          defaultVal: 100,\n          callbackFn: this.updateTempo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), buttonList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      length: 4,\n      currentStep: 0,\n      rootFreq: 440,\n      running: false,\n      tempo: 1000,\n      //in milliseconds\n      callbackFn: this.props.callbackFn\n    };\n    const interval = null;\n    const envelope = null;\n  }\n\n}\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = props => {\n      this.oscillator = this.props.oscillator;\n      this.setState({\n        initialized: true\n      }, () => {\n        this.context = this.oscillator.context;\n        this.filter = this.context.createBiquadFilter();\n        console.log(this.oscillator);\n        console.log(this.oscillator.gain);\n        this.oscillator.gain.connect(this.filter);\n        this.filter.connect(this.context.destination);\n        this.filter.type = this.mode;\n        this.filter.frequency.setValueAtTime(this.state.cutoff, 1);\n        this.filter.Q.value = this.state.resonance;\n        console.log(\"filter initialized\");\n        console.log(this.filter);\n        console.log(this.context.destination);\n      });\n    };\n\n    this.updateCutoff = freq => {\n      this.setState({\n        cutoff: freq\n      }, this.updateFilter());\n    };\n\n    this.updateResonance = q => {\n      this.setState({\n        resonance: q\n      }, this.updateFilter());\n    };\n\n    this.updateFilter = () => {\n      if (this.context != null) {\n        if (this.state.initialized != false) {\n          this.filter.frequency.setValueAtTime(this.state.cutoff, 1);\n          this.filter.Q.value = this.state.resonance;\n          this.filter.type = this.mode;\n          console.log(\"filter updated\");\n        } else this.init();\n      } else console.error(\"failed to load audioContext() in updateFilter()\");\n    };\n\n    this.state = {\n      cutoff: 5000,\n      resonance: 1,\n      //between 0.0001 and 1000\n      initialized: false\n    };\n    const context = null;\n    const filter = 0;\n    const oscillator = this.props.oscillator;\n    const mode = 'lowpass';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inlineDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Cutoff\",\n          minVal: 0,\n          maxVal: 5000,\n          defaultVal: this.state.cutoff,\n          callbackFn: this.updateCutoff\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Resonance\",\n          minVal: 1,\n          maxVal: 100,\n          defaultVal: this.state.resonance,\n          callbackFn: this.updateResonance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => this.mode = 'lowpass',\n          children: \" lowpass \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => this.mode = 'highpass',\n          children: \" highpass \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Envelope extends React.Component {\n  //Takes in a gain node from props.oscillator.gain\n  constructor(props) {\n    super(props);\n\n    this.setAttack = val => this.setState({\n      attack: val\n    });\n\n    this.setRelease = val => this.setState({\n      release: val\n    });\n\n    this.updateAttack = () => {\n      //let newGain = this.state.gain/(this.state.attack - this.counter);\n      let newGain = Math.log10(this.counter + 1); //console.log(\"current attack: \" + newGain);\n\n      this.state.callbackFn(newGain);\n      this.counter++;\n\n      if (!(this.counter < this.state.attack)) {\n        this.counter = 0;\n        clearInterval(this.attackInterval);\n        this.releaseInterval = setInterval(() => this.updateRelease(), this.secsPerUpdate);\n      }\n    };\n\n    this.updateRelease = () => {\n      //clear the attack interval and start the release timeout\n      let newGain = 0;\n\n      if (this.counter > this.state.release) {\n        newGain = 0;\n        this.state.callbackFn(newGain);\n        clearInterval(this.releaseInterval);\n        if (this.attackInterval != null) clearInterval(this.attackInterval);\n      } else {\n        newGain = this.state.gain - Math.log10(1 / this.state.release * this.counter + 1); //f(x) = log(-(x - 9)+ (z + 1)) puts y = 0 at the point (x, z); x-9 keeps starter point at gain = 1\n\n        this.state.callbackFn(newGain); //console.log(\"current release: \" + newGain);\n\n        this.counter++;\n      }\n    };\n\n    this.resetEnvelope = props => {\n      /**\r\n       * envelope takes attack and release and updates the envelope based on this \r\n       * by creating an interval var. \r\n       * creates interval that lasts length of attack,\r\n       * then once interval ends, calls the release callbackFn \r\n       * and runs that until it ends.\r\n       */\n      console.log(\"envelope triggered\");\n      this.counter = 0;\n      if (this.attackInterval != null) clearInterval(this.attackInterval);\n      if (this.releaseInterval != null) clearInterval(this.releaseInterval);\n      this.setState({\n        gain: 1\n      }, () => {\n        this.attackInterval = setInterval(() => this.updateAttack(), this.secsPerUpdate);\n        this.state.callbackFn(this.state.gain);\n        this.updateAttack();\n      });\n    };\n\n    this.render = props => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          id: \"triggerEnvelope\",\n          onClick: () => this.resetEnvelope(),\n          children: \"Trigger Env\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => this.setLooping(),\n          children: \"Loop Envelope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Attack\",\n          minVal: 0,\n          maxVal: 50,\n          defaultVal: 5,\n          step: 1,\n          callbackFn: this.setAttack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Release\",\n          minVal: 0,\n          maxVal: 50,\n          defaultVal: 5,\n          step: 1,\n          callbackFn: this.setRelease\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      attack: 50,\n      //cycles of updateAttack\n      release: 50,\n      //cycles of updateRelease\n      gain: 1,\n      callbackFn: this.props.callbackFn\n    };\n    const secsPerUpdate = 5000;\n    const counter = 0;\n    const attackInterval = null;\n    const releaseInterval = null;\n  }\n\n}\n\nclass Oscillator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = () => {\n      //init audioContext\n      this.setState({\n        initialized: true\n      });\n      this.oscillator = this.state.context.createOscillator();\n      this.oscillator.gain = this.state.context.createGain();\n      this.oscillator.gain.gain.setValueAtTime(1, 0);\n      this.oscillator.type = 'square';\n      this.oscillator.frequency.setValueAtTime(this.state.rootFreq, 2);\n      this.oscillator.connect(this.oscillator.gain);\n      this.sequencer = /*#__PURE__*/_jsxDEV(Sequencer, {\n        callbackFn: this.updateFreq\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 22\n      }, this);\n      this.play();\n    };\n\n    this.play = () => {\n      if (this.state.playing == false) this.oscillator.start();\n    };\n\n    this.stop = () => {\n      if (this.state.playing == true) {\n        this.setState({\n          playing: false\n        }, () => this.oscillator.stop());\n      }\n    };\n\n    this.updateGain = newGain => {\n      this.oscillator.gain.gain.setValueAtTime(newGain, 0);\n      console.log('gain updated');\n    };\n\n    this.updateRootFreq = newFreq => {\n      //For pitch adjustment purposes -- do not use with sequencer class\n      this.setState({\n        rootFreq: newFreq\n      }, () => this.updateFreq(newFreq));\n    };\n\n    this.updateFreq = newFreq => {\n      //For sequencing purposes\n      this.setState({\n        currentFreq: newFreq\n      }, () => {\n        if (this.oscillator != null) this.oscillator.frequency.value = this.state.currentFreq;\n      });\n      return this.state.rootFreq;\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => {\n            this.state.context.resume();\n\n            if (this.state.initialized == false) {\n              this.init();\n            } else this.play();\n          },\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"key\",\n          onClick: () => {\n            this.state.context.suspend();\n            if (this.state.playing == true) this.stop();\n          },\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 8\n        }, this), this.sequencer, /*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Gain\",\n          minVal: 0,\n          maxVal: 1,\n          defaultVal: 0.5,\n          step: 0.05,\n          callbackFn: this.updateGain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          sliderName: \"Pitch\",\n          minVal: 0,\n          maxVal: 1000,\n          defaultVal: 440,\n          callbackFn: this.updateRootFreq\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      rootFreq: 440,\n      currentFreq: 440,\n      playing: false,\n      context: props.context,\n      initialized: false\n    };\n    var oscillator = null;\n    var sequencer = null;\n  }\n\n}\n\nclass Connector {\n  constructor(o, d) {\n    this.connect = () => this.origin.connect(this.destination);\n\n    this.disconnect = () => this.origin.disconnect(this.destination);\n\n    //o - origin, d - destination\n    const origin = o;\n    const destination = d;\n  }\n\n}\n\nconst context = new window.AudioContext();\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Synth, {\n  context: context\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 420,\n  columnNumber: 13\n}, this));","map":{"version":3,"names":["React","ReactDOM","Synth","Component","constructor","props","init","setState","initialized","oscillator","state","context","createOscillator","gain","createGain","setValueAtTime","type","frequency","rootFreq","connect","play","playing","start","stop","updateGain","newGain","console","log","updateRootFreq","newFreq","updateFreq","currentFreq","value","addModule","stringIndex","currentModules","push","error","render","availableModules","i","moduleList","length","resume","suspend","numModules","Slider","sliderName","minVal","maxVal","defaultVal","step","callbackFn","document","getElementById","currentVal","Sequencer","pluckSequence","currentStep","running","interval","setInterval","runSequence","tempo","click","stopSequence","stepUpLength","stepDownLength","updateTempo","newTempo","clearInterval","buttonList","envelope","Filter","filter","createBiquadFilter","destination","mode","cutoff","Q","resonance","updateCutoff","freq","updateFilter","updateResonance","q","Envelope","setAttack","val","attack","setRelease","release","updateAttack","Math","log10","counter","attackInterval","releaseInterval","updateRelease","secsPerUpdate","resetEnvelope","setLooping","Oscillator","sequencer","Connector","o","d","origin","disconnect","window","AudioContext","root","createRoot"],"sources":["C:/Users/metra/Desktop/programming/playground/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\"; //from react-dom/client, not react\r\nimport './index.css';\r\n\r\n/**\r\n * 'The sun is rising\r\n * it's almost dawn! \r\n * The night is short --\r\n * walk on, girl.\r\n */\r\n\r\n//test stuff\r\nclass Synth extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      numModules: 4,\r\n      rootFreq: 440,\r\n      currentFreq: 440,\r\n      playing: false,\r\n      context: props.context,\r\n      initialized: false,\r\n      moduleList: ['oscillator', 'filter', 'envelope', 'sequencer'],\r\n    };\r\n    var oscillator = null;\r\n    var currentModules = [];\r\n  }\r\n  init = () => {\r\n    //init audioContext\r\n    this.setState({initialized: true});\r\n    this.oscillator = this.state.context.createOscillator();\r\n    this.oscillator.gain = this.state.context.createGain();\r\n    this.oscillator.gain.gain.setValueAtTime(1, 0);\r\n    this.oscillator.type = 'square';\r\n    this.oscillator.frequency.setValueAtTime(this.state.rootFreq, 2);\r\n    this.oscillator.connect(this.oscillator.gain);\r\n    this.play();\r\n  }\r\n  play = () => {\r\n    if(this.state.playing == false) this.oscillator.start();\r\n  }\r\n  stop = () => {\r\n    if(this.state.playing == true) {\r\n      this.setState({playing: false}, () => this.oscillator.stop());\r\n    }\r\n  }\r\n  updateGain = (newGain) => {\r\n    this.oscillator.gain.gain.setValueAtTime(newGain, 0);\r\n    console.log('gain updated');\r\n  }\r\n  updateRootFreq = (newFreq) => {\r\n    //For pitch adjustment purposes -- do not use with sequencer class\r\n    this.setState({rootFreq: newFreq}, () => this.updateFreq(newFreq));\r\n  }\r\n  updateFreq = (newFreq) => {\r\n    //For sequencing purposes\r\n    this.setState({currentFreq: newFreq}, () => {\r\n      if(this.oscillator != null) this.oscillator.frequency.value = this.state.currentFreq;\r\n    })\r\n    return this.state.rootFreq;\r\n  }\r\n  addModule = (stringIndex) => {\r\n    switch(stringIndex) {\r\n      case 'oscillator':\r\n        console.log('oscillator');\r\n        this.currentModules.push(<Oscillator context = {this.state.context}/>)\r\n        break;\r\n      case 'filter':\r\n        console.log('filter');\r\n        break;\r\n      case 'envelope':\r\n        console.log('envelope');\r\n        break;\r\n      case 'sequencer':\r\n        console.log('sequencer');\r\n        break;\r\n      default:\r\n        console.error('Synth.addModule() stringIndex out of range');\r\n    }\r\n    console.log(this.currentModules);\r\n  }\r\n  render = () => {\r\n    \r\n    const availableModules = [];\r\n    for(let i = 0; i < this.state.moduleList.length; i++ ){\r\n      availableModules[i] = <button className=\"key\" key={this.state.moduleList[i] + \"_module\"} onClick={() => this.addModule(this.state.moduleList[i])}>{this.state.moduleList[i]}</button>\r\n    }\r\n    return (\r\n      <div className=\"mainDiv\">\r\n        {availableModules}\r\n        <button className=\"key\" onClick={ () => {\r\n        this.state.context.resume();\r\n        if(this.state.initialized == false){\r\n          this.init();\r\n        }\r\n        else this.play();\r\n       } }>Play</button>\r\n       <button className=\"key\" onClick={ () => {\r\n         this.state.context.suspend();\r\n         if(this.state.playing == true) this.stop()\r\n       }}>Stop</button>\r\n       <Slider sliderName = \"Gain\" minVal = {0} maxVal = {1} defaultVal = {0.5} step ={0.05} callbackFn = {this.updateGain} />\r\n       <Slider sliderName = \"Pitch\" minVal = {0} maxVal = {1000} defaultVal = {440} callbackFn = {this.updateRootFreq} />\r\n       <Filter oscillator = {this.oscillator} />\r\n       <Sequencer callbackFn = {this.updateFreq}/>\r\n       <Envelope oscillator = {this.oscillator} callbackFn = {this.updateGain} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass Slider extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      minVal: props.minVal,\r\n      maxVal: props.maxVal,\r\n      step: props.step,\r\n      defaultVal: props.currentVal,\r\n      sliderName: props.sliderName,\r\n      callbackFn: function(value){\r\n        props.callbackFn(value);\r\n      },\r\n    }\r\n  }\r\n  render = (props) => {\r\n    return(\r\n      <span className=\"freq_slider\">\r\n        <div>{this.state.sliderName}</div>\r\n          <input type =\"range\" min={this.state.minVal} max={this.state.maxVal} defaultValue ={this.state.defaultVal} step = {this.state.step} className=\"slider\" id={this.state.sliderName} onChange={() =>{\r\n            this.state.callbackFn(document.getElementById(this.props.sliderName).value);\r\n          }}></input>\r\n      </span>\r\n    );\r\n  }\r\n}\r\nclass Sequencer extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      length: 4,\r\n      currentStep: 0,\r\n      rootFreq: 440,\r\n      running: false,\r\n      tempo: 1000, //in milliseconds\r\n      callbackFn: this.props.callbackFn,\r\n    };\r\n    const interval = null;\r\n    const envelope = null;\r\n  }\r\n  pluckSequence = (step) => {\r\n    this.setState({currentStep: step});\r\n    let newFreq = this.state.rootFreq * (step + 0.5);\r\n    this.state.callbackFn(newFreq);\r\n    console.log(step);\r\n    if(this.state.running == false) {\r\n      this.interval = setInterval(() => this.runSequence(), this.state.tempo);\r\n    }\r\n  }\r\n  runSequence = () => {\r\n    document.getElementById(\"triggerEnvelope\").click(); //will break when there's more than one envelope, must fix later\r\n    let step = (this.state.currentStep + 1) % this.state.length;\r\n    this.setState({currentStep: step, running: true});\r\n    let newFreq = this.state.rootFreq * (step + 0.5);\r\n    this.setState({rootFreq: this.state.callbackFn(newFreq)});\r\n    console.log(\"Current Pitch: \" + newFreq + \"Current Step: \" + step);\r\n  }\r\n  stopSequence = () => {\r\n\r\n  }\r\n  stepUpLength = () => {\r\n    this.setState({length: this.state.length + 1});\r\n  }\r\n  stepDownLength = () => {\r\n    if(this.state.length - 1 > 0) this.setState({length: this.state.length - 1});\r\n    else console.error(\"Minimum sequencer length reached\");\r\n  }\r\n  updateTempo = (newTempo) => {\r\n    this.setState({tempo: newTempo});\r\n    clearInterval(this.interval);\r\n    this.interval = setInterval(() => this.runSequence(), newTempo);\r\n  }\r\n  render = (props) => {\r\n    const buttonList = [];\r\n    for(let i = 0; i < this.state.length; i++){\r\n      console.log(buttonList);\r\n      buttonList[i] = <button className=\"seqStep\" key={i + '_step'} onClick={() => this.pluckSequence(i)}>{i}</button>;\r\n    }\r\n    return(\r\n      <div>\r\n        <button className=\"key\" onClick={() => this.stepUpLength() }>+</button>\r\n        <button className=\"key\" onClick={() => this.stepDownLength() }>-</button>\r\n        <Slider sliderName=\"Tempo\" minVal={20} maxVal={1000} defaultVal={100} callbackFn={this.updateTempo} />\r\n        {buttonList}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass Filter extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      cutoff: 5000,\r\n      resonance: 1,     //between 0.0001 and 1000\r\n      initialized: false,\r\n    }\r\n    const context = null;\r\n    const filter = 0;\r\n    const oscillator = this.props.oscillator;\r\n    const mode = 'lowpass';\r\n  }\r\n  init = (props) => {\r\n    this.oscillator = this.props.oscillator;\r\n    this.setState({initialized: true}, () => {\r\n      this.context = this.oscillator.context;\r\n      this.filter = this.context.createBiquadFilter();\r\n      console.log(this.oscillator);\r\n      console.log(this.oscillator.gain);\r\n      this.oscillator.gain.connect(this.filter);\r\n      this.filter.connect(this.context.destination);\r\n      this.filter.type = this.mode;\r\n      this.filter.frequency.setValueAtTime(this.state.cutoff, 1);\r\n      this.filter.Q.value = this.state.resonance;\r\n      console.log(\"filter initialized\");\r\n      console.log(this.filter);\r\n      console.log(this.context.destination);\r\n    })\r\n  }\r\n  updateCutoff = (freq) => {\r\n    this.setState({cutoff: freq}, this.updateFilter());\r\n  }\r\n  updateResonance = (q) => {\r\n    this.setState({resonance: q}, this.updateFilter());\r\n  }\r\n  updateFilter = () => {\r\n    if(this.context != null){\r\n      if(this.state.initialized != false){\r\n        this.filter.frequency.setValueAtTime(this.state.cutoff, 1);\r\n        this.filter.Q.value = this.state.resonance;\r\n        this.filter.type = this.mode;\r\n        console.log(\"filter updated\");\r\n      }\r\n      else this.init();\r\n      \r\n    } \r\n    else console.error(\"failed to load audioContext() in updateFilter()\")\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"inlineDiv\">\r\n        <div>\r\n          <Slider sliderName = \"Cutoff\" minVal={0} maxVal={5000} defaultVal={this.state.cutoff} callbackFn={this.updateCutoff}/>\r\n          <Slider sliderName = \"Resonance\" minVal={1} maxVal={100} defaultVal={this.state.resonance} callbackFn={this.updateResonance}/>\r\n        </div>\r\n        <div>\r\n          <button className=\"key\" onClick={() => this.mode = 'lowpass'}> lowpass </button>\r\n          <button className=\"key\" onClick={() => this.mode = 'highpass'}> highpass </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nclass Envelope extends React.Component {\r\n  //Takes in a gain node from props.oscillator.gain\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      attack: 50, //cycles of updateAttack\r\n      release: 50, //cycles of updateRelease\r\n      gain: 1,\r\n      callbackFn: this.props.callbackFn,\r\n    }\r\n    const secsPerUpdate = 5000;\r\n    const counter = 0;\r\n    const attackInterval = null;\r\n    const releaseInterval = null;\r\n  }\r\n  setAttack = (val) => this.setState({attack: val});\r\n  setRelease = (val) => this.setState({release: val});\r\n  updateAttack = () => {\r\n    //let newGain = this.state.gain/(this.state.attack - this.counter);\r\n    let newGain = Math.log10(this.counter + 1);\r\n    //console.log(\"current attack: \" + newGain);\r\n    this.state.callbackFn(newGain);\r\n    this.counter++;\r\n    if(!(this.counter < this.state.attack)){\r\n      this.counter = 0; \r\n      clearInterval(this.attackInterval);\r\n      this.releaseInterval = setInterval(() => this.updateRelease(), this.secsPerUpdate);\r\n    }\r\n  }\r\n  updateRelease = () => {\r\n    //clear the attack interval and start the release timeout\r\n    let newGain = 0;\r\n    if(this.counter > this.state.release){\r\n      newGain = 0;\r\n      this.state.callbackFn(newGain);\r\n      clearInterval(this.releaseInterval);\r\n      if(this.attackInterval != null) clearInterval(this.attackInterval);\r\n    }\r\n    else {\r\n      newGain = this.state.gain - Math.log10((1/this.state.release)*this.counter + 1); //f(x) = log(-(x - 9)+ (z + 1)) puts y = 0 at the point (x, z); x-9 keeps starter point at gain = 1\r\n      this.state.callbackFn(newGain);\r\n      //console.log(\"current release: \" + newGain);\r\n      this.counter++;\r\n    }\r\n\r\n  }\r\n  resetEnvelope = (props) => {\r\n    /**\r\n     * envelope takes attack and release and updates the envelope based on this \r\n     * by creating an interval var. \r\n     * creates interval that lasts length of attack,\r\n     * then once interval ends, calls the release callbackFn \r\n     * and runs that until it ends.\r\n     */\r\n    console.log(\"envelope triggered\");\r\n    this.counter = 0;\r\n    if(this.attackInterval != null) clearInterval(this.attackInterval);\r\n    if(this.releaseInterval != null) clearInterval(this.releaseInterval);\r\n    this.setState({gain: 1}, () => {\r\n      this.attackInterval = setInterval(() => this.updateAttack(), this.secsPerUpdate);\r\n      this.state.callbackFn(this.state.gain);\r\n      this.updateAttack();\r\n    });\r\n  }\r\n  render = (props) => {\r\n    return(\r\n      <div>\r\n        <button className=\"key\" id=\"triggerEnvelope\" onClick={() => this.resetEnvelope()}>Trigger Env</button>\r\n        <button className=\"key\" onClick={() => this.setLooping()} >Loop Envelope</button>\r\n        <Slider sliderName= \"Attack\" minVal = {0} maxVal = {50} defaultVal = {5} step = {1} callbackFn={this.setAttack}/>\r\n        <Slider sliderName= \"Release\" minVal = {0} maxVal = {50} defaultVal = {5} step = {1} callbackFn={this.setRelease}/>\r\n      </div> \r\n    );\r\n  }\r\n}\r\nclass Oscillator extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      rootFreq: 440,\r\n      currentFreq: 440,\r\n      playing: false,\r\n      context: props.context,\r\n      initialized: false,\r\n    };\r\n    var oscillator = null;\r\n    var sequencer = null;\r\n  }\r\n  init = () => {\r\n    //init audioContext\r\n    this.setState({initialized: true});\r\n    this.oscillator = this.state.context.createOscillator();\r\n    this.oscillator.gain = this.state.context.createGain();\r\n    this.oscillator.gain.gain.setValueAtTime(1, 0);\r\n    this.oscillator.type = 'square';\r\n    this.oscillator.frequency.setValueAtTime(this.state.rootFreq, 2);\r\n    this.oscillator.connect(this.oscillator.gain);\r\n    this.sequencer = <Sequencer callbackFn = {this.updateFreq}/>\r\n    this.play();\r\n  }\r\n  play = () => {\r\n    if(this.state.playing == false) this.oscillator.start();\r\n  }\r\n  stop = () => {\r\n    if(this.state.playing == true) {\r\n      this.setState({playing: false}, () => this.oscillator.stop());\r\n    }\r\n  }\r\n  updateGain = (newGain) => {\r\n    this.oscillator.gain.gain.setValueAtTime(newGain, 0);\r\n    console.log('gain updated');\r\n  }\r\n  updateRootFreq = (newFreq) => {\r\n    //For pitch adjustment purposes -- do not use with sequencer class\r\n    this.setState({rootFreq: newFreq}, () => this.updateFreq(newFreq));\r\n  }\r\n  updateFreq = (newFreq) => {\r\n    //For sequencing purposes\r\n    this.setState({currentFreq: newFreq}, () => {\r\n      if(this.oscillator != null) this.oscillator.frequency.value = this.state.currentFreq;\r\n    })\r\n    return this.state.rootFreq;\r\n  }\r\n  render = () => {\r\n    return (\r\n      <div className=\"mainDiv\">\r\n        {/** Render play/pause buttons */}\r\n        <button className=\"key\" onClick={ () => {\r\n        this.state.context.resume();\r\n        if(this.state.initialized == false){\r\n          this.init();\r\n        }\r\n        else this.play();\r\n       } }>Play</button>\r\n       <button className=\"key\" onClick={ () => {\r\n         this.state.context.suspend();\r\n         if(this.state.playing == true) this.stop()\r\n       }}>Stop</button>\r\n       {/** Render gain/pitch sliders */}\r\n       {this.sequencer}\r\n       <Slider sliderName = \"Gain\" minVal = {0} maxVal = {1} defaultVal = {0.5} step ={0.05} callbackFn = {this.updateGain} />\r\n       <Slider sliderName = \"Pitch\" minVal = {0} maxVal = {1000} defaultVal = {440} callbackFn = {this.updateRootFreq} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass Connector {\r\n  constructor(o, d){ //o - origin, d - destination\r\n    const origin = o;\r\n    const destination = d;\r\n  }\r\n  connect = () => this.origin.connect(this.destination);\r\n  disconnect = () => this.origin.disconnect(this.destination);\r\n}\r\n\r\nconst context = new window.AudioContext;\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<Synth context = {context}/>);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}